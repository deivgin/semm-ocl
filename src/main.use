model Untangle

-- ==============================
-- ENUMERATIONS
-- ==============================

enum Priority {low, medium, high}

enum Status {open, in_progress, done}

-- ==============================
-- CLASSES
-- ==============================

class Date
attributes
  now: Integer
operations
  year() : Integer
  month() : Integer
  day() : Integer
  days() : Integer = self.now
end

class Project
attributes
  id: String
  title: String
  description: String
  startDate: Date
  endDate: Date
operations
  getDuration(): Integer
end

class Task
attributes
  id: String
  title: String
  description: String
  priority: Priority
  status: Status
  projectId: String
  dueDate: Date
operations
  updateTitle(title: String)
  updateDescription(description: String)
  setPriority(priority: Priority)
  setStatus(status: Status)
  setDueDate(date: Date)
end

class User
attributes
  id: String
  name: String
  email: String
  projects: Set(Project)
  tasks: Set(Task)
operations
  getProjects(): Set(Project) = self.projects
  setName(name: String)
end

-- ==============================
-- ASSOCIATIONS
-- ==============================

association Owns between
  User [*] role owner
  Task [1] role ownedBy
end

association Manages between
  User [*] role manager
  Project [1] role managedBy
end

association Contains between
  Task [0..1] role project
  Project [*] role tasks
end

-- ==============================
-- CONSTRAINTS
-- ==============================

constraints

context Project inv idRequired:
  self.id <> null and self.id <> ''

context Project inv validDates:
  self.startDate.days() <= self.endDate.days()

context Task inv idRequired: self.id <> null and self.id <> ''

context User inv idRequired: self.id <> null and self.id <> ''

context User inv emailRequired: self.email <> null and self.email <> ''

