model Untangle

-- ==============================
-- ENUMERATIONS
-- ==============================

enum Priority {low, medium, high}

enum Status {open, in_progress, done}

-- ==============================
-- CLASSES
-- ==============================

class Date
attributes
  -- stores date in days since epoch (Jan 1, 1970)
  now: Integer
operations
  -- Returns the year (4 digits)
  year() : Integer = 1970 + (self.now div 365)

  -- Returns the month (1-12)
  month() : Integer =
    let dayOfYear: Integer = self.now - ((self.year() - 1970) * 365)
    in
      (dayOfYear * 12 div 365) + 1

  -- Returns the day of month (1-31)
  day() : Integer =
    let dayOfYear: Integer = self.now - ((self.year() - 1970) * 365),
        monthVal: Integer = self.month(),
        daysBeforeMonth: Integer = ((monthVal - 1) * 365) div 12
    in
      dayOfYear - daysBeforeMonth
end

class Project
attributes
  id: String
  title: String
  description: String
  startDate: Date
  endDate: Date
end

class Task
attributes
  id: String
  title: String
  description: String
  priority: Priority
  status: Status
  projectId: String
  dueDate: Date
end

class User
attributes
  id: String
  name: String
  email: String
  projects: Set(Project)
  tasks: Set(Task)
end

-- ==============================
-- ASSOCIATIONS
-- ==============================

association Owns between
  User [*] role owner
  Task [1] role ownedBy
end

association Manages between
  User [*] role manager
  Project [1] role managedBy
end

association Contains between
  Task [0..1] role project
  Project [*] role tasks
end

-- ==============================
-- CONSTRAINTS
-- ==============================

constraints

context Project inv idRequired:
  self.id <> null and self.id <> ''

context Task inv idRequired: self.id <> null and self.id <> ''

context User inv idRequired: self.id <> null and self.id <> ''

context User inv emailRequired: self.email <> null and self.email <> ''

